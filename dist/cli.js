#!/usr/bin/env node
"use strict";var f=Object.create;var l=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var g=(e,o,t,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of h(o))!y.call(e,n)&&n!==t&&l(e,n,{get:()=>o[n],enumerable:!(r=w(o,n))||r.enumerable});return e};var u=(e,o,t)=>(t=e!=null?f(b(e)):{},g(o||!e||!e.__esModule?l(t,"default",{value:e,enumerable:!0}):t,e));var d=u(require("inquirer"));var A=["push","pull_request","create","delete","deployment","deployment_status","fork","gollum","page_build","public","status","workflow_call","workflow_dispatch"],c=[{type:"input",name:"name",message:"Enter name for the workflow: ",required:!0},{type:"input",name:"run-name",message:"Enter name for the run (optional): "},{type:"checkbox",name:"on",message:"Select events that trigger the workflow: ",choices:A}];function a(e){e instanceof Error&&e.message==="User force closed the prompt with 0 null"&&(console.log(`
Closing the Create GitHub Actions CLI tool...
`),process.exit(0)),console.error(`
An error occurred: `,e,`
`),process.exit(1)}var s=u(require("inquirer"));async function i(){let e=[],o={wantsToAddJob:!0};try{o=await s.default.prompt([{type:"confirm",name:"wantsToAddJob",message:"Do you want to add jobs for the workflow? ",default:!0}])}catch(t){a(t)}if(!o.wantsToAddJob)return console.log(`
Not adding jobs to the workflow.
`),[];for(;;){let t=await s.default.prompt([{type:"input",name:"jobName",message:"Enter job name: "},{type:"confirm",name:"addSteps",message:"Do you want to add steps to this job?",default:!1}]),r=[];if(t.addSteps)for(;;){let p=await s.default.prompt([{type:"input",name:"stepName",message:"Enter step name: "},{type:"input",name:"stepAction",message:"Enter step action (e.g., `run`, `uses`): "},{type:"confirm",name:"addAnotherStep",message:"Do you want to add another step?",default:!1}]);if(r.push({name:p.stepName,action:p.stepAction}),!p.addAnotherStep)break}if(e.push({name:t.jobName,steps:r}),!(await s.default.prompt([{type:"confirm",name:"addAnotherJob",message:"Do you want to add another job?",default:!1}])).addAnotherJob)break}return e}async function m(){console.log(`
Welcome to the Create GitHub Actions CLI tool
`);let e=await d.default.prompt(c).catch(r=>a(r)),o=await i();return{...e,jobs:o}}async function E(){let e=await m();console.log(e)}E();
